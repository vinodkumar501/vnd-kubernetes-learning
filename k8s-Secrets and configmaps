https://www.bogotobogo.com/DevOps/Docker/Docker_Kubernetes_MongoDB_MongoExpress.php


what is mongodb?

https://hub.docker.com/_/mongo


MongoDB is a free and open-source cross-platform document-oriented database program. Classified as a NoSQL database program, MongoDB uses JSON-like documents with schemata. 
MongoDB is developed by MongoDB Inc., and is published under a combination of the Server Side Public License and the Apache License.

The MongoDB server in the image listens on the standard MongoDB port, 27017, so connecting via Docker networks will be the same as connecting to a remote mongod.
The following example starts another MongoDB container instance and runs the mongo command line client against the original MongoDB container from the example above,
allowing you to execute MongoDB statements against your database instance:

Environment Variables?

When you start the mongo image, you can adjust the initialization of the MongoDB instance by passing one or more environment variables on the docker run command line. 
Do note that none of the variables below will have any effect if you start the container with a data directory that already contains a database: any pre-existing database 
will always be left untouched on container startup.

-> MONGO_INITDB_ROOT_USERNAME, MONGO_INITDB_ROOT_PASSWORD

-> MONGO_INITDB_DATABASE
This variable allows you to specify the name of a database to be used for creation scripts in /docker-entrypoint-initdb.d/*.js (see Initializing a fresh instance below).
MongoDB is fundamentally designed for "create on first use", so if you do not insert data with your JavaScript files, then no database is created.


==========================================
MongoDB secrets
Secrets (MongoDB username/password) should be in place before we do any MongoDB deployment since MongoDB pods need to access the secrets. 
So, let's create the secrets with base64 encoded:

->$ echo -n 'username' | base64       ---> '' or " " or without quotes also work
dXNlcm5hbWU=

->$ echo -n 'password' | base64              
cGFzc3dvcmQ=

------------------------ mongodb-secret.yaml ------------------------
apiVersion: v1
kind: Secret
metadata:
     name: mongo-secret
     namespace: vnd
type: Opaque
data:
    mongo-username: dXNlcm5hbWU=
    mongo-password: cGFzc3dvcmQ=

----------------------- mongodb-deployment.yaml -------------------------

apiVersion: apps/v1
kind: Deployment
metadata:
   name: mongo-db
   namespace: vnd
   labels:
      app: mongo-db
spec:
   replicas: 1
   selector:
       matchLabels:
           app: mongo-db
   template:
      metadata:
         labels:
           app: mongo-db
      spec:
        containers:
        - name: mongo-db
          image: mongo
          ports:
            - containerPort: 27017
          env:
           - name: MONGO_INITDB_ROOT_USERNAME
             valueFrom:
              secretKeyRef:
                 name: secret
                 key: mongo-username
           - name: MONGO_INITDB_ROOT_PASSWORD
             valueFrom:
               secretKeyRef: 
                  name: secret
                  key: mongo-password
                  
                  
  ===================================service.yaml file===========================
  apiVersion: v1
kind: Service
metadata:
  name: mongo-service
  namespace: vnd
spec:
   selector:
     app: mongo-exp
   ports:
    - protocol: TCP
      port: 27017
      targetPort: 27017
   type:
     LoadBalancer
                                       
